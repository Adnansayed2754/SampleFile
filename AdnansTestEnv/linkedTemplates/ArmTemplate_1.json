{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "AdnansTestEnv"
		},
		"GiveitAlink_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'GiveitAlink'"
		},
		"GiveitAlink_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://giveitaname.dfs.core.windows.net"
		},
		"AzureDataLakeStorage1_properties_privateLinkResourceId": {
			"type": "string",
			"defaultValue": "/subscriptions/f002a2ff-6c55-4d1d-9a6d-baf73f1b9dd6/resourceGroups/Adnan/providers/Microsoft.Storage/storageAccounts/gen2omkarrepro"
		},
		"AzureDataLakeStorage1_properties_groupId": {
			"type": "string",
			"defaultValue": "dfs"
		},
		"AzureDataLakeStorage1_properties_fqdns": {
			"type": "array",
			"defaultValue": [
				"gen2omkarrepro.dfs.core.windows.net"
			]
		},
		"Eventtrigger_properties_typeProperties_scope": {
			"type": "string",
			"defaultValue": "/subscriptions/f002a2ff-6c55-4d1d-9a6d-baf73f1b9dd6/resourceGroups/Adnan/providers/Microsoft.Storage/storageAccounts/giveitaname"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/default')]",
			"type": "Microsoft.DataFactory/factories/managedVirtualNetworks",
			"apiVersion": "2018-06-01",
			"properties": {},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/wait')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Wait1",
						"type": "Wait",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 1
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SlaMonitoringPipeline')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Web_GetToken",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": " http://localhost:8082/api/bearer",
							"connectVia": {
								"referenceName": "bhvmas",
								"type": "IntegrationRuntimeReference"
							},
							"method": "GET",
							"headers": {}
						}
					},
					{
						"name": "Web_GetCaseList",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "Web_GetToken",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://api.support.microsoft.com/v0/queryresult",
							"method": "POST",
							"headers": {
								"Content-Type": "application/x-www-form-urlencoded",
								"Authorization": {
									"value": "@concat('Bearer ',split(activity('Web_GetToken').output.Response,'\"')[1])",
									"type": "Expression"
								}
							},
							"body": "query=SELECT ExpiresOn,MSEG.QueryService.V1.SlaItem.casenumber,MSEG.QueryService.V1.Case_v1.AgentId,Datediff(minute,Getutcdate(),ExpiresOn\n ) FROM MSEG.QueryService.V1.SlaItem inner join MSEG.QueryService.V1.Case_v1 on \nMSEG.QueryService.V1.SlaItem.casenumber=MSEG.QueryService.V1.Case_v1.casenumber WHERE MSEG.QueryService.V1.Case_v1.AgentId in ('yuzhang4@microsoftsupport.com','bohzhan@microsoftsupport.com','jingli3@microsoftsupport.com','jinleiwang@microsoftsupport.com','jinpu@microsoftsupport.com','junjliu@microsoftsupport.com','rongli@microsoftsupport.com','ruoli@microsoftsupport.com','weyi@microsoftsupport.com','yofe@microsoftsupport.com','yud@microsoftsupport.com','yufwan@microsoftsupport.com','yuzhang4@microsoftsupport.com') and MSEG.QueryService.V1.SlaItem.State='Pending' and MSEG.QueryService.V1.SlaItem.SlaType='InitialResponse'"
						}
					},
					{
						"name": "ForEach",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Web_GetCaseList",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Web_GetCaseList').output.table_parameters[0].table_parameter_result",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "If Condition",
									"type": "IfCondition",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@lessOrEquals(int(item()[3]),30)",
											"type": "Expression"
										},
										"ifTrueActivities": [
											{
												"name": "SendEmail",
												"type": "WebActivity",
												"dependsOn": [],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"url": "https://bohansla.azurewebsites.net:443/api/slaEmail/triggers/manual/invoke?api-version=2020-05-01-preview&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=W16P_QHljnrO1WybjSpNIBqUiwTt86tjqbX7o5LmKRo",
													"method": "POST",
													"headers": {
														"Content-Type": "application/json"
													},
													"body": {
														"value": "{\n   \"DataFactoryName\": \"@{pipeline().DataFactory}\",\n   \"PipelineRunID\": \"@{pipeline().RunId}\",\n   \"TimeRemaining\": \"@{item()[3]}\",\n   \"CaseNumber\": \"@{item()[1]}\",\n   \"EmailTo\": \"@{item()[2]}\",\n   \"CaseOwner\": \"@{item()[2]}\"\n}\t",
														"type": "Expression"
													}
												}
											}
										]
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"variables": {
					"token": {
						"type": "String"
					},
					"item": {
						"type": "String"
					}
				},
				"folder": {
					"name": "SLA"
				},
				"annotations": [],
				"lastPublishTime": "2021-10-21T12:24:57Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Binary1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Binary",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "PT1H.json",
						"folderPath": "resourceId=/SUBSCRIPTIONS/F002A2FF-6C55-4D1D-9A6D-BAF73F1B9DD6/RESOURCEGROUPS/ADNAN/PROVIDERS/MICROSOFT.DATAFACTORY/FACTORIES/ADNANSTESTENV/y=2021/m=10/d=26/h=12/m=00",
						"fileSystem": "insights-logs-activityruns"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/CSVBridgeStone')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "csv-files"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DelimitedText1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "MOCK_DATA.csv",
						"container": "naam-mai-kya-rakhahai"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DelimitedText1_copy1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ExcelBridgeStone')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ExcelLink",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Excel",
				"typeProperties": {
					"sheetName": "SumitData",
					"location": {
						"type": "AzureBlobFSLocation",
						"fileSystem": "excel-files"
					}
				},
				"schema": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/JsonSLA')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "JsonOmkarGen2",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "EmpEmail.json",
						"fileSystem": "web-container"
					}
				},
				"schema": {
					"type": "object",
					"properties": {
						"Email": {
							"type": "string"
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SinkCSV')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "naam-tho-suna-hoga"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/WorkitemCsv')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Link_SQL_Blob",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "Workitems.csv",
						"container": "naam-mai-kya-rakhahai"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "WorkItemId",
						"type": "String"
					},
					{
						"name": "Title",
						"type": "String"
					},
					{
						"name": "WorkItemType",
						"type": "String"
					},
					{
						"name": "TeamProject",
						"type": "String"
					},
					{
						"name": "Reason",
						"type": "String"
					},
					{
						"name": "IterationPath",
						"type": "String"
					},
					{
						"name": "Description",
						"type": "String"
					},
					{
						"name": "CreatedDate",
						"type": "String"
					},
					{
						"name": "CreatedByDisplayName",
						"type": "String"
					},
					{
						"name": "CreatedByImageUrl",
						"type": "String"
					},
					{
						"name": "CreatedByUniqueName",
						"type": "String"
					},
					{
						"name": "AssignedToDisplayName",
						"type": "String"
					},
					{
						"name": "AssignedToImageUrl",
						"type": "String"
					},
					{
						"name": "AssignedToUniqueName",
						"type": "String"
					},
					{
						"name": "AreaPath",
						"type": "String"
					},
					{
						"name": "Priority",
						"type": "String"
					},
					{
						"name": "TestType",
						"type": "String"
					},
					{
						"name": "Environment",
						"type": "String"
					},
					{
						"name": "Product",
						"type": "String"
					},
					{
						"name": "PuppyType",
						"type": "String"
					},
					{
						"name": "ScrumMasterDisplayName",
						"type": "String"
					},
					{
						"name": "ScrumMasterImageUrl",
						"type": "String"
					},
					{
						"name": "ScrumMasterUniqueName",
						"type": "String"
					},
					{
						"name": "State",
						"type": "String"
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/WorkitemSQL')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "link_SQL",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": "BridgeStoneSQL"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/workitemSQL2blob')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "tanyarepro",
						"container": "naam-tho-suna-hoga"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": false,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/GiveitAlink')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('GiveitAlink_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('GiveitAlink_accountKey')]"
					}
				},
				"connectVia": {
					"referenceName": "integrationRuntime3",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/integrationRuntime1')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "Managed",
				"typeProperties": {
					"computeProperties": {
						"location": "East US",
						"dataFlowProperties": {
							"computeType": "General",
							"coreCount": 8,
							"timeToLive": 10,
							"cleanup": false
						}
					}
				},
				"managedVirtualNetwork": {
					"type": "ManagedVirtualNetworkReference",
					"referenceName": "default"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/managedVirtualNetworks/default')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/default/AzureDataLakeStorage1')]",
			"type": "Microsoft.DataFactory/factories/managedVirtualNetworks/managedPrivateEndpoints",
			"apiVersion": "2018-06-01",
			"properties": {
				"privateLinkResourceId": "[parameters('AzureDataLakeStorage1_properties_privateLinkResourceId')]",
				"groupId": "[parameters('AzureDataLakeStorage1_properties_groupId')]",
				"fqdns": "[parameters('AzureDataLakeStorage1_properties_fqdns')]"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/managedVirtualNetworks/default')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Eventtrigger')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "wait",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "BlobEventsTrigger",
				"typeProperties": {
					"blobPathBeginsWith": "/purviewsscan/blobs/",
					"ignoreEmptyBlobs": true,
					"scope": "[parameters('Eventtrigger_properties_typeProperties_scope')]",
					"events": [
						"Microsoft.Storage.BlobCreated"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/wait')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CICD')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DelimitedText1",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "SinkCSV",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2022-01-04T07:27:20Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DelimitedText1')]",
				"[concat(variables('factoryId'), '/datasets/SinkCSV')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SLA_Testing')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Lookup1",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "DelimitedText1",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "Web1",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "Lookup1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://gen2omkarrepro.blob.core.windows.net/web-container/EmpEmails.csv",
							"method": "PUT",
							"headers": {
								"Authorization ": "Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsIng1dCI6Ik1yNS1BVWliZkJpaTdOZDFqQmViYXhib1hXMCIsImtpZCI6Ik1yNS1BVWliZkJpaTdOZDFqQmViYXhib1hXMCJ9.eyJhdWQiOiJodHRwczovL3N0b3JhZ2UuYXp1cmUuY29tIiwiaXNzIjoiaHR0cHM6Ly9zdHMud2luZG93cy5uZXQvNzJmOTg4YmYtODZmMS00MWFmLTkxYWItMmQ3Y2QwMTFkYjQ3LyIsImlhdCI6MTY0MDg3NjAzNCwibmJmIjoxNjQwODc2MDM0LCJleHAiOjE2NDA5NjI3MzQsImFpbyI6IkUyWmdZTGhuSXZVbDIrMlo0Sm5vM2ViWDdwVnZBQUE9IiwiYXBwaWQiOiJiM2M5OTFiYy1iMDk1LTQ0Y2UtODQ5ZC1mODUzOTgxNmM1YzYiLCJhcHBpZGFjciI6IjEiLCJpZHAiOiJodHRwczovL3N0cy53aW5kb3dzLm5ldC83MmY5ODhiZi04NmYxLTQxYWYtOTFhYi0yZDdjZDAxMWRiNDcvIiwib2lkIjoiMTQwOTgyYzItMTFmYS00NGI3LTljN2EtOGE5MzYyOTQxZDU2IiwicmgiOiIwLkFSb0F2NGo1Y3ZHR3IwR1JxeTE4MEJIYlI3eVJ5Yk9Wc001RWhKMzRVNWdXeGNZYUFBQS4iLCJzdWIiOiIxNDA5ODJjMi0xMWZhLTQ0YjctOWM3YS04YTkzNjI5NDFkNTYiLCJ0aWQiOiI3MmY5ODhiZi04NmYxLTQxYWYtOTFhYi0yZDdjZDAxMWRiNDciLCJ1dGkiOiI3YVRMczJPYVRrdUsxVHI2NlMyMUFRIiwidmVyIjoiMS4wIn0.TbBJvdpa79-_p7yb9XdiHXAZQ5dOLSVvyeRqIllA1JWCsqfsDPcqf2X7bm3-eBPHpKGfBe8_R8Q1vD06Aa7Jxll328il8hcMTFMChmpipHtP-DB6ChXK0093gbJgX3NCxyKbO8qB6FkzoLQSOBRNTF4Vq-D-yNKmRWw_wCljigbZguXfjwT_-jE89p9QTdvGcU1OZyKWu1Fe2qqGFIJAR9efdOJ5TwgUwCzOzZ3mOIusiI46i2bwGfbAOUrlJ9lo1uBm-HPx0cMx9SV3rLhktfiN0qQRXZaVYHw9SsaKqhTQcLyxNtWpAh0zW1gT8ssyDdLhcfV4CTM3juWD2z3sBQ",
								"x-ms-version": "2019-12-12",
								"x-ms-blob-type": "Blockblob"
							},
							"body": {
								"value": "@concat('query=SELECT * FROM ''',activity('Lookup1').output.value,'''')",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2021-12-30T15:04:30Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DelimitedText1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SQL-Blob-CSV')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"tableOption": "autoCreate",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "WorkItemId",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "WorkItemId",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Title",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Title",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "WorkItemType",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "WorkItemType",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "TeamProject",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "TeamProject",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Reason",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Reason",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "IterationPath",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "IterationPath",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Description",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Description",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "CreatedDate",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "CreatedDate",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "CreatedByDisplayName",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "CreatedByDisplayName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "CreatedByImageUrl",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "CreatedByImageUrl",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "CreatedByUniqueName",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "CreatedByUniqueName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "AssignedToDisplayName",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "AssignedToDisplayName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "AssignedToImageUrl",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "AssignedToImageUrl",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "AssignedToUniqueName",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "AssignedToUniqueName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "AreaPath",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "AreaPath",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Priority",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Priority",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "TestType",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "TestType",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Environment",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Environment",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Product",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Product",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "PuppyType",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "PuppyType",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "ScrumMasterDisplayName",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "ScrumMasterDisplayName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "ScrumMasterImageUrl",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "ScrumMasterImageUrl",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "ScrumMasterUniqueName",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "ScrumMasterUniqueName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "State",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "State",
											"type": "String",
											"physicalType": "nvarchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "WorkitemCsv",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "WorkitemSQL",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2021-11-17T10:37:14Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/WorkitemCsv')]",
				"[concat(variables('factoryId'), '/datasets/WorkitemSQL')]"
			]
		}
	]
}