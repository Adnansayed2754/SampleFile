{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "AdnansTestEnv"
		},
		"AzureBlobStorage1_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureBlobStorage1'"
		},
		"AzureTableStorageGiveitAname_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureTableStorageGiveitAname'"
		},
		"Binary_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'Binary'"
		},
		"ExcelLink_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'ExcelLink'"
		},
		"JsonLink_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'JsonLink'"
		},
		"JsonOmkarGen2_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'JsonOmkarGen2'"
		},
		"JsonTestGen2Omkar_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'JsonTestGen2Omkar'"
		},
		"Link_SQL_Blob_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'Link_SQL_Blob'"
		},
		"linkExcel_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'linkExcel'"
		},
		"link_SQL_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'link_SQL'"
		},
		"Binary_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://gen2omkarrepro.dfs.core.windows.net/"
		},
		"ExcelLink_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://gen2omkarrepro.dfs.core.windows.net"
		},
		"JsonLink_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://gen2omkarrepro.dfs.core.windows.net"
		},
		"JsonOmkarGen2_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://gen2omkarrepro.dfs.core.windows.net"
		},
		"JsonTestGen2Omkar_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://gen2omkarrepro.dfs.core.windows.net"
		},
		"linkExcel_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://gen2omkarrepro.dfs.core.windows.net"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/Git')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Wait1",
						"type": "Wait",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 1
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureBlobStorage1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('AzureBlobStorage1_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureTableStorageGiveitAname')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureTableStorage",
				"typeProperties": {
					"connectionString": "[parameters('AzureTableStorageGiveitAname_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Binary')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('Binary_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('Binary_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ExcelLink')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('ExcelLink_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('ExcelLink_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/JsonLink')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('JsonLink_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('JsonLink_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/JsonOmkarGen2')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('JsonOmkarGen2_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('JsonOmkarGen2_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/JsonTestGen2Omkar')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('JsonTestGen2Omkar_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('JsonTestGen2Omkar_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Link_SQL_Blob')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('Link_SQL_Blob_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/linkExcel')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('linkExcel_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('linkExcel_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/link_SQL')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('link_SQL_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/bhvmas')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "Managed",
				"description": "SLA monitoring ",
				"typeProperties": {
					"computeProperties": {
						"location": "AutoResolve",
						"dataFlowProperties": {
							"computeType": "General",
							"coreCount": 8,
							"timeToLive": 10,
							"cleanup": false
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/integrationRuntime2')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "SelfHosted",
				"typeProperties": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/integrationRuntime3')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "Managed",
				"typeProperties": {
					"computeProperties": {
						"location": "East US",
						"dataFlowProperties": {
							"computeType": "General",
							"coreCount": 8,
							"timeToLive": 10,
							"cleanup": false
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/default')]",
			"type": "Microsoft.DataFactory/factories/managedVirtualNetworks",
			"apiVersion": "2018-06-01",
			"properties": {},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SlaMonitoringPipeline')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Web_GetToken",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": " http://localhost:8082/api/bearer",
							"connectVia": {
								"referenceName": "bhvmas",
								"type": "IntegrationRuntimeReference"
							},
							"method": "GET",
							"headers": {}
						}
					},
					{
						"name": "Web_GetCaseList",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "Web_GetToken",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://api.support.microsoft.com/v0/queryresult",
							"method": "POST",
							"headers": {
								"Content-Type": "application/x-www-form-urlencoded",
								"Authorization": {
									"value": "@concat('Bearer ',split(activity('Web_GetToken').output.Response,'\"')[1])",
									"type": "Expression"
								}
							},
							"body": "query=SELECT ExpiresOn,MSEG.QueryService.V1.SlaItem.casenumber,MSEG.QueryService.V1.Case_v1.AgentId,Datediff(minute,Getutcdate(),ExpiresOn\n ) FROM MSEG.QueryService.V1.SlaItem inner join MSEG.QueryService.V1.Case_v1 on \nMSEG.QueryService.V1.SlaItem.casenumber=MSEG.QueryService.V1.Case_v1.casenumber WHERE MSEG.QueryService.V1.Case_v1.AgentId in ('yuzhang4@microsoftsupport.com','bohzhan@microsoftsupport.com','jingli3@microsoftsupport.com','jinleiwang@microsoftsupport.com','jinpu@microsoftsupport.com','junjliu@microsoftsupport.com','rongli@microsoftsupport.com','ruoli@microsoftsupport.com','weyi@microsoftsupport.com','yofe@microsoftsupport.com','yud@microsoftsupport.com','yufwan@microsoftsupport.com','yuzhang4@microsoftsupport.com') and MSEG.QueryService.V1.SlaItem.State='Pending' and MSEG.QueryService.V1.SlaItem.SlaType='InitialResponse'"
						}
					},
					{
						"name": "ForEach",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Web_GetCaseList",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Web_GetCaseList').output.table_parameters[0].table_parameter_result",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "If Condition",
									"type": "IfCondition",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@lessOrEquals(int(item()[3]),30)",
											"type": "Expression"
										},
										"ifTrueActivities": [
											{
												"name": "SendEmail",
												"type": "WebActivity",
												"dependsOn": [],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"url": "https://bohansla.azurewebsites.net:443/api/slaEmail/triggers/manual/invoke?api-version=2020-05-01-preview&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=W16P_QHljnrO1WybjSpNIBqUiwTt86tjqbX7o5LmKRo",
													"method": "POST",
													"headers": {
														"Content-Type": "application/json"
													},
													"body": {
														"value": "{\n   \"DataFactoryName\": \"@{pipeline().DataFactory}\",\n   \"PipelineRunID\": \"@{pipeline().RunId}\",\n   \"TimeRemaining\": \"@{item()[3]}\",\n   \"CaseNumber\": \"@{item()[1]}\",\n   \"EmailTo\": \"@{item()[2]}\",\n   \"CaseOwner\": \"@{item()[2]}\"\n}\t",
														"type": "Expression"
													}
												}
											}
										]
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"variables": {
					"token": {
						"type": "String"
					},
					"item": {
						"type": "String"
					}
				},
				"folder": {
					"name": "SLA"
				},
				"annotations": [],
				"lastPublishTime": "2021-10-21T12:24:57Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/bhvmas')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CSVBridgeStone')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "csv-files"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DelimitedText1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "Empdet.csv",
						"container": "web-container"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ExcelBridgeStone')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ExcelLink",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Excel",
				"typeProperties": {
					"sheetName": "SumitData",
					"location": {
						"type": "AzureBlobFSLocation",
						"fileSystem": "excel-files"
					}
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ExcelLink')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/JsonSLA')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "JsonOmkarGen2",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "EmpEmail.json",
						"fileSystem": "web-container"
					}
				},
				"schema": {
					"type": "object",
					"properties": {
						"Email": {
							"type": "string"
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/JsonOmkarGen2')]"
			]
		}
	]
}